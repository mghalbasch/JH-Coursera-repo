data[47,]
data %>% filter(is.na(Ozone)) %>% nrow
data %>% summarise(mean(Ozone, na.rm = TRUE))
data %>% filter(Ozone > 31 & Temp > 90) %>%
summarise(avg = mean(Solar.R))
data %>% filter(Month == 6) %>%
summarise(avg = mean(Temp))
getwd()
setwd("C:/Users/Matt/Documents/datasciencecoursera/R_Programming/R_Programming_Week2/specdata")
getwd()
data <- read.csv("001.csv")
data
getwd()
setwd(getwd())
getwd()
setwd("C:/Users/Matt/Documents/datasciencecoursera/R_Programming/R_Programming_Week2/specdata")
getwd() == "C:/Users/Matt/Documents/datasciencecoursera/R_Programming/R_Programming_Week2/specdata"
?as.character
format(3, justify = "right", digits = 3)
format(3, justify = "right", digits = 3, trim=FALSE)
format(3, justify = "right", width = 3, trim=FALSE)
format(3, justify = "right", width = 3, trim=FALSE, zero.print = TRUE)
?stringr
str_pad(3,3,pad="0")
indices <- 1:50
sapply(indices, str_pad(3, pad="0"))
sapply(indices, str_pad(width = 3, pad="0"))
?sapply
sapply(indices, str_pad(indices, width = 3, pad="0"))
sapply(indices, function(x) str_pad(x, width = 3, pad="0"))
?collapse
?paste
for(i in indices){}
for(i in indices){
number <- str_pad(i, width = 3, pad = "0")
filename <- paste(number, ".csv", collapse=TRUE, sep="")
}
for(i in indices){
number <- str_pad(i, width = 3, pad = "0")
filename <- paste(number, ".csv", collapse="")
}
filename
for(i in id){
number <- str_pad(i, width = 3, pad = "0")
filename <- paste(number, ".csv", collapse="", sep="")
print(filename)
}
for(i in indices){
number <- str_pad(i, width = 3, pad = "0")
filename <- paste(number, ".csv", collapse="", sep="")
print(filename) }
read_files <- function(directory, id = 1:332) {
setwd(directory)
if(directory != getwd()){return(NA)}
for(i in id){
number <- str_pad(i, width = 3, pad = "0")
filename <- paste(number, ".csv", collapse="", sep="")
id_data <- read.csv(filename)
if(i==id[1]){
data = id_data
}else{
data <- rbind(data, id_data)
}
}
return(data)
}
data <- read_files(getwd())
head(data)
?sample_n
sample_n(data, size=50)
data <- read_files(getwd(), id=1:5)
sample_n(data, size=50)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate"
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors listed
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
if(pollutant != "sulfate" & pollutant != "nitrate"){return(NA)}
airdata <- read_files(directory, id)
p_vector <- airdata$pollutant
return(mean(p_vector, na.rm = TRUE))
}
pollutantmean(getwd(), "nitrate", id = 4:30)
head(data)
data$nitrate
mean(data$nitrate, na.rm=TRUE)
pollutant <- "nitrate"
data$pollutant
data[[pollutant]]
read_files <- function(directory, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## This function reads in the data corresponding to the monitor
## ID numbers provided from csv files in 'directory'.
## It returns a large dataframe that includes all the data for
## these ID numbers, on all dates.
setwd(directory)
if(directory != getwd()){return(NA)}
for(i in id){
number <- str_pad(i, width = 3, pad = "0")
filename <- paste(number, ".csv", collapse="", sep="")
id_data <- read.csv(filename)
if(i==id[1]){
data = id_data
}else{
data <- rbind(data, id_data)
}
}
return(data)
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate"
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors listed
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
if(pollutant != "sulfate" & pollutant != "nitrate"){return(NA)}
airdata <- read_files(directory, id)
p_vector <- airdata[[pollutant]]
return(mean(p_vector, na.rm = TRUE))
}
getwd()
setwd("C:/Users/Matt/Documents/datasciencecoursera/R_Programming/R_Programming_Week2/")
pollutantmean("specdata", "sulfate", 1:10)
pollutant <- "sulfate"
data[pollutant]
head(data[pollutant])
getwd()
read_files <- function(directory, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## This function reads in the data corresponding to the monitor
## ID numbers provided from csv files in 'directory'.
## It returns a large dataframe that includes all the data for
## these ID numbers, on all dates.
setwd(directory)
if(directory != getwd()){return(NA)}
for(i in id){
number <- str_pad(i, width = 3, pad = "0")
filename <- paste(number, ".csv", collapse="", sep="")
id_data <- read.csv(filename)
if(i==id[1]){
data = id_data
}else{
data <- rbind(data, id_data)
}
}
return(data)
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate"
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors listed
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
if(pollutant != "sulfate" & pollutant != "nitrate"){return(NA)}
airdata <- read_files(directory, id)
p_vector <- airdata[[pollutant]]
return(mean(p_vector, na.rm = TRUE))
}
pollutantmean("specdata", "sulfate", 1:10)
read_files <- function(directory, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## This function reads in the data corresponding to the monitor
## ID numbers provided from csv files in 'directory'.
## It returns a large dataframe that includes all the data for
## these ID numbers, on all dates.
for(i in id){
number <- str_pad(i, width = 3, pad = "0")
filename <- paste(number, ".csv", collapse="", sep="")
id_data <- read.csv(filename)
if(i==id[1]){
data = id_data
}else{
data <- rbind(data, id_data)
}
}
return(data)
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate"
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors listed
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
if(pollutant != "sulfate" & pollutant != "nitrate"){return(NA)}
airdata <- read_files(directory, id)
p_vector <- airdata[[pollutant]]
return(mean(p_vector, na.rm = TRUE))
}
pollutantmean("specdata", "sulfate", 1:10)
getwd()
setwd("C:/Users/Matt/Documents/datasciencecoursera/R_Programming/R_Programming_Week2")
pollutantmean("specdata", "sulfate", 1:10)
?paste
"\\"
"\"
d
""
"
directory <- "specdata"
getwd()
number <- 2-
number <- 20
number <- 20
number
filename <- paste(directory,
"\\",
number, ".csv", collapse="", sep="")
filename
data <- read.csv(filename)
i <- 20
number <- str_pad(i, width = 3, pad = "0")
filename <- paste(directory,
"\\",
number, ".csv", collapse="", sep="")
id_data <- read.csv(filename)
head(id_data)
getwd()
read_files <- function(directory, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## This function reads in the data corresponding to the monitor
## ID numbers provided from csv files in 'directory'.
## It returns a large dataframe that includes all the data for
## these ID numbers, on all dates.
for(i in id){
number <- str_pad(i, width = 3, pad = "0")
filename <- paste(directory,
"\\",
number, ".csv", collapse="", sep="")
id_data <- read.csv(filename)
if(i==id[1]){
data = id_data
}else{
data <- rbind(data, id_data)
}
}
return(data)
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate"
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors listed
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
if(pollutant != "sulfate" & pollutant != "nitrate"){return(NA)}
airdata <- read_files(directory, id)
p_vector <- airdata[[pollutant]]
return(mean(p_vector, na.rm = TRUE))
}
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
?complete.cases
source(complete.R)
getwd()
source("complete.R")
complete("specdata", 1)
getwd()
source("complete.R")
complete("specdata", 1)
complete("specdata", c(2,4,8,10,12))
complete("specdata", 30:25)
complete("specdata", 3)
x <- complete("specdata")
head(x)
library(dplyr)
x %>% filter(nobs > 150)
x %>% filter(nobs > 200) %>% select(ID)
x %>% filter(nobs > 300) %>% select(ID)
x %>% filter(nobs > 350) %>% select(ID)
x %>% filter(nobs > 500) %>% select(ID)
x %>% filter(nobs > 700) %>% select(ID)
x %>% filter(nobs > 1700) %>% select(ID)
x %>% filter(nobs > 1000) %>% select(ID)
a_df <- read_files("specdata")
x %>% filter(nobs > 1000) %>% select(ID) %>% y
x %>% filter(nobs > 1000) %>% select(ID) %>% var
x %>% filter(nobs > 1000) %>% select(ID) %>% x2
x %>% filter(nobs > 1000) %>% select(ID) -> y
a_df[y]
a_df[y,]
y$ID
a_df[y$ID]
z <- y$ID
a_df[z]
a_df[y$ID, ]
a_df %>% filter(ID %in% y$ID) -> z
z
?cor
z %>% group_by(ID) %>% summarise(correlations = cor(nitrate, sulfate, use=complete.obs))
z %>% group_by(ID) %>% summarise(correlations = cor(nitrate, sulfate, use="complete.obs"))
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
cr
source("complete.R")
source("corr.R")
cr <- corr("specdata", 150)
head(cr)
source("complete.R")
source("corr.R")
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
summary(cr)
cr <- corr("specdata", 5000)
head(cr)
summary(cr)
length(cr)
as.numeric(cr)
summary(as.numeric(cr))
cr <- corr("specdata", 5000)
source("complete.R")
source("corr.R")
cr <- corr("specdata", 5000)
head(cr)
summary(cr)
length(cr)
cr <- corr("specdata")
summary(cr)
length(cr)
?is.null
source("complete.R")
source("corr.R")
cr <- corr("specdata", 150)
head(cr)
summary(cr)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 34)
pollutantmean("specdata", "nitrate")
cc <- complete("specdata", c(6,10,20,34,100,200,310))
print(cc$nobs)
cc <- complete("specdata", 54)
print(cc$nobs)
set.seed(42)
cc <- complete("specdata", 332:1)
head(cc)
cc %>% arrange(desc(ID))
use <- sample(332,10)
print(cc[use, "nobs"])
set.seed(42)
cc <- arrange(cc, desc(ID))
print(cc[use, "nobs"])
head(cc)
set.seed(42)
use <- sample(332,10)
print(cc[use, "nobs"])
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332,10)
cc <- arrange(cc, desc(ID))
print(cc[use, "nobs"])
cc <- arrange(cc, ID)
head(cc)
print(cc[use, "nobs"])
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
?summarise
?group_by
332:1
?sample
set.seed(42)
use <- base::sample(332,10)
head(use)
head(cc)
cc <- arrange(cc, desc(ID))
head(cc)
print(cc[use, "nobs"])
use
sample(332,10)
set.seed(42)
sample(332,10)
set.seed(42)
x <- complete("specdata", 332:1)
use <- base::sample(332,10)
print(cc[use, "nobs"])
print(x[use, "nobs"])
y <- arrange(x, desc(ID))
print(y[use, "nobs"])
?set.seed
source("complete.R")
source("corr.R")
set.seed(42)
cc <- complete("specdata", 332:1)
use <- base::sample(332, 10)
print(cc[use, "nobs"])
use
cc <- complete("specdata", use)
cc
set.seed(42)
use <- sample(332, 10)
use
332 - use
x <- 332 - use
complete("specdata", x)
cc
source("complete.R")
source("corr.R")
cc <- complete("specdata", 332:1)
a = c(524,577,276,487,3,592,5,148,645,435)
cc %>% filter(nobs %in% a)
b = c(608, 885, 684, 510, 765, 171, 244, 745, 624, 216)
cc %>% filter(nobs %in% b)
c <- c(270,310,27,692,307,681,631,455,690,440)
cc %>% filter(nobs %in% c)
d <- c(711, 135, 74, 455, 178, 73, 49, 0, 687, 237)
cc %>% filter(nobs %in% d)
e <- c(643, 99, 703, 673, 59, 366, 277, 644, 318, 594)
cc %>% filter(nobs %in% e)
cc
?n
cc %>% filter(nobs %in% d)
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
cr
x <- c(4, "a", TRUE)
class(x)
x <- 1:4
y <- 2:3
z <- x+y
class(z)
z
data %>% filter(Month == 6) %>%
summarise(avg = mean(Temp))
source('~/datasciencecoursera/R_Programming/R_Programming_Week1/R_Programming_Quiz_1.R', echo=TRUE)
getwd()
setwd("C:/Users/Matt/Documents/datasciencecoursera/R_Programming_Week1")
getwd()
setwd("C:/Users/Matt/Documents/datasciencecoursera/R_Programming_Week1")
getwd()
setwd("C:/Users/Matt/Documents/datasciencecoursera/R_Programming_Week1")
setwd("C:/Users/Matt/Documents/datasciencecoursera/R_Programming_Week1")
setwd("C:/Users/Matt/Documents/datasciencecoursera/R_Programming_Week1")
library(tidyverse)
setwd("C:/Users/Matt/Documents/datasciencecoursera/R_Programming_Week1")
data <- read.csv("hw1_data.csv")
head(data,2)
tail(data,2)
data[47,]
data %>% filter(is.na(Ozone)) %>% nrow
data %>% summarise(mean(Ozone, na.rm = TRUE))
data %>% filter(Ozone > 31 & Temp > 90) %>%
summarise(avg = mean(Solar.R))
data %>% filter(Month == 6) %>%
summarise(avg = mean(Temp))
data %>% group_by(Month) %>%
summarise(Max = max(Ozone, na.rm = TRUE))
library(tidyverse)
setwd("C:/Users/Matt/Documents/datasciencecoursera/R_Programming_Week1")
